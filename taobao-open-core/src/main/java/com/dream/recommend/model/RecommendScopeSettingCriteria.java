package com.dream.recommend.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecommendScopeSettingCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public RecommendScopeSettingCriteria() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    protected RecommendScopeSettingCriteria(RecommendScopeSettingCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table TOP_RECOMMEND_SCOPE_SETTING
     *
     *  Mon Sep 29 17:58:40 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andShopIdIsNull() {
            addCriterion("SHOP_ID is null");
            return this;
        }

        public Criteria andShopIdIsNotNull() {
            addCriterion("SHOP_ID is not null");
            return this;
        }

        public Criteria andShopIdEqualTo(Long value) {
            addCriterion("SHOP_ID =", value, "shopId");
            return this;
        }

        public Criteria andShopIdNotEqualTo(Long value) {
            addCriterion("SHOP_ID <>", value, "shopId");
            return this;
        }

        public Criteria andShopIdGreaterThan(Long value) {
            addCriterion("SHOP_ID >", value, "shopId");
            return this;
        }

        public Criteria andShopIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SHOP_ID >=", value, "shopId");
            return this;
        }

        public Criteria andShopIdLessThan(Long value) {
            addCriterion("SHOP_ID <", value, "shopId");
            return this;
        }

        public Criteria andShopIdLessThanOrEqualTo(Long value) {
            addCriterion("SHOP_ID <=", value, "shopId");
            return this;
        }

        public Criteria andShopIdIn(List values) {
            addCriterion("SHOP_ID in", values, "shopId");
            return this;
        }

        public Criteria andShopIdNotIn(List values) {
            addCriterion("SHOP_ID not in", values, "shopId");
            return this;
        }

        public Criteria andShopIdBetween(Long value1, Long value2) {
            addCriterion("SHOP_ID between", value1, value2, "shopId");
            return this;
        }

        public Criteria andShopIdNotBetween(Long value1, Long value2) {
            addCriterion("SHOP_ID not between", value1, value2, "shopId");
            return this;
        }

        public Criteria andScopeTypeIsNull() {
            addCriterion("SCOPE_TYPE is null");
            return this;
        }

        public Criteria andScopeTypeIsNotNull() {
            addCriterion("SCOPE_TYPE is not null");
            return this;
        }

        public Criteria andScopeTypeEqualTo(String value) {
            addCriterion("SCOPE_TYPE =", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeNotEqualTo(String value) {
            addCriterion("SCOPE_TYPE <>", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeGreaterThan(String value) {
            addCriterion("SCOPE_TYPE >", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeGreaterThanOrEqualTo(String value) {
            addCriterion("SCOPE_TYPE >=", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeLessThan(String value) {
            addCriterion("SCOPE_TYPE <", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeLessThanOrEqualTo(String value) {
            addCriterion("SCOPE_TYPE <=", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeLike(String value) {
            addCriterion("SCOPE_TYPE like", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeNotLike(String value) {
            addCriterion("SCOPE_TYPE not like", value, "scopeType");
            return this;
        }

        public Criteria andScopeTypeIn(List values) {
            addCriterion("SCOPE_TYPE in", values, "scopeType");
            return this;
        }

        public Criteria andScopeTypeNotIn(List values) {
            addCriterion("SCOPE_TYPE not in", values, "scopeType");
            return this;
        }

        public Criteria andScopeTypeBetween(String value1, String value2) {
            addCriterion("SCOPE_TYPE between", value1, value2, "scopeType");
            return this;
        }

        public Criteria andScopeTypeNotBetween(String value1, String value2) {
            addCriterion("SCOPE_TYPE not between", value1, value2, "scopeType");
            return this;
        }

        public Criteria andIsEnabledIsNull() {
            addCriterion("IS_ENABLED is null");
            return this;
        }

        public Criteria andIsEnabledIsNotNull() {
            addCriterion("IS_ENABLED is not null");
            return this;
        }

        public Criteria andIsEnabledEqualTo(String value) {
            addCriterion("IS_ENABLED =", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledNotEqualTo(String value) {
            addCriterion("IS_ENABLED <>", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledGreaterThan(String value) {
            addCriterion("IS_ENABLED >", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledGreaterThanOrEqualTo(String value) {
            addCriterion("IS_ENABLED >=", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledLessThan(String value) {
            addCriterion("IS_ENABLED <", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledLessThanOrEqualTo(String value) {
            addCriterion("IS_ENABLED <=", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledLike(String value) {
            addCriterion("IS_ENABLED like", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledNotLike(String value) {
            addCriterion("IS_ENABLED not like", value, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledIn(List values) {
            addCriterion("IS_ENABLED in", values, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledNotIn(List values) {
            addCriterion("IS_ENABLED not in", values, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledBetween(String value1, String value2) {
            addCriterion("IS_ENABLED between", value1, value2, "isEnabled");
            return this;
        }

        public Criteria andIsEnabledNotBetween(String value1, String value2) {
            addCriterion("IS_ENABLED not between", value1, value2, "isEnabled");
            return this;
        }

        public Criteria andLastModifiedByIsNull() {
            addCriterion("LAST_MODIFIED_BY is null");
            return this;
        }

        public Criteria andLastModifiedByIsNotNull() {
            addCriterion("LAST_MODIFIED_BY is not null");
            return this;
        }

        public Criteria andLastModifiedByEqualTo(String value) {
            addCriterion("LAST_MODIFIED_BY =", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByNotEqualTo(String value) {
            addCriterion("LAST_MODIFIED_BY <>", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByGreaterThan(String value) {
            addCriterion("LAST_MODIFIED_BY >", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByGreaterThanOrEqualTo(String value) {
            addCriterion("LAST_MODIFIED_BY >=", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByLessThan(String value) {
            addCriterion("LAST_MODIFIED_BY <", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByLessThanOrEqualTo(String value) {
            addCriterion("LAST_MODIFIED_BY <=", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByLike(String value) {
            addCriterion("LAST_MODIFIED_BY like", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByNotLike(String value) {
            addCriterion("LAST_MODIFIED_BY not like", value, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByIn(List values) {
            addCriterion("LAST_MODIFIED_BY in", values, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByNotIn(List values) {
            addCriterion("LAST_MODIFIED_BY not in", values, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByBetween(String value1, String value2) {
            addCriterion("LAST_MODIFIED_BY between", value1, value2, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedByNotBetween(String value1, String value2) {
            addCriterion("LAST_MODIFIED_BY not between", value1, value2, "lastModifiedBy");
            return this;
        }

        public Criteria andLastModifiedTimeIsNull() {
            addCriterion("LAST_MODIFIED_TIME is null");
            return this;
        }

        public Criteria andLastModifiedTimeIsNotNull() {
            addCriterion("LAST_MODIFIED_TIME is not null");
            return this;
        }

        public Criteria andLastModifiedTimeEqualTo(Date value) {
            addCriterion("LAST_MODIFIED_TIME =", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotEqualTo(Date value) {
            addCriterion("LAST_MODIFIED_TIME <>", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThan(Date value) {
            addCriterion("LAST_MODIFIED_TIME >", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_MODIFIED_TIME >=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThan(Date value) {
            addCriterion("LAST_MODIFIED_TIME <", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThanOrEqualTo(Date value) {
            addCriterion("LAST_MODIFIED_TIME <=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeIn(List values) {
            addCriterion("LAST_MODIFIED_TIME in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotIn(List values) {
            addCriterion("LAST_MODIFIED_TIME not in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeBetween(Date value1, Date value2) {
            addCriterion("LAST_MODIFIED_TIME between", value1, value2, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotBetween(Date value1, Date value2) {
            addCriterion("LAST_MODIFIED_TIME not between", value1, value2, "lastModifiedTime");
            return this;
        }
    }
}