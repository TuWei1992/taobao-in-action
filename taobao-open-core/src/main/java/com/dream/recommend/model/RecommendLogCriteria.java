package com.dream.recommend.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecommendLogCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public RecommendLogCriteria() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    protected RecommendLogCriteria(RecommendLogCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table TOP_RECOMMEND_LOG
     *
     *  Mon Sep 29 17:59:35 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return this;
        }

        public Criteria andIdEqualTo(Object value) {
            addCriterion("ID =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Object value) {
            addCriterion("ID <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Object value) {
            addCriterion("ID >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Object value) {
            addCriterion("ID >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Object value) {
            addCriterion("ID <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Object value) {
            addCriterion("ID <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("ID in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("ID not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Object value1, Object value2) {
            addCriterion("ID between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Object value1, Object value2) {
            addCriterion("ID not between", value1, value2, "id");
            return this;
        }

        public Criteria andShopIdIsNull() {
            addCriterion("SHOP_ID is null");
            return this;
        }

        public Criteria andShopIdIsNotNull() {
            addCriterion("SHOP_ID is not null");
            return this;
        }

        public Criteria andShopIdEqualTo(Object value) {
            addCriterion("SHOP_ID =", value, "shopId");
            return this;
        }

        public Criteria andShopIdNotEqualTo(Object value) {
            addCriterion("SHOP_ID <>", value, "shopId");
            return this;
        }

        public Criteria andShopIdGreaterThan(Object value) {
            addCriterion("SHOP_ID >", value, "shopId");
            return this;
        }

        public Criteria andShopIdGreaterThanOrEqualTo(Object value) {
            addCriterion("SHOP_ID >=", value, "shopId");
            return this;
        }

        public Criteria andShopIdLessThan(Object value) {
            addCriterion("SHOP_ID <", value, "shopId");
            return this;
        }

        public Criteria andShopIdLessThanOrEqualTo(Object value) {
            addCriterion("SHOP_ID <=", value, "shopId");
            return this;
        }

        public Criteria andShopIdIn(List values) {
            addCriterion("SHOP_ID in", values, "shopId");
            return this;
        }

        public Criteria andShopIdNotIn(List values) {
            addCriterion("SHOP_ID not in", values, "shopId");
            return this;
        }

        public Criteria andShopIdBetween(Object value1, Object value2) {
            addCriterion("SHOP_ID between", value1, value2, "shopId");
            return this;
        }

        public Criteria andShopIdNotBetween(Object value1, Object value2) {
            addCriterion("SHOP_ID not between", value1, value2, "shopId");
            return this;
        }

        public Criteria andItemIdIsNull() {
            addCriterion("ITEM_ID is null");
            return this;
        }

        public Criteria andItemIdIsNotNull() {
            addCriterion("ITEM_ID is not null");
            return this;
        }

        public Criteria andItemIdEqualTo(Object value) {
            addCriterion("ITEM_ID =", value, "itemId");
            return this;
        }

        public Criteria andItemIdNotEqualTo(Object value) {
            addCriterion("ITEM_ID <>", value, "itemId");
            return this;
        }

        public Criteria andItemIdGreaterThan(Object value) {
            addCriterion("ITEM_ID >", value, "itemId");
            return this;
        }

        public Criteria andItemIdGreaterThanOrEqualTo(Object value) {
            addCriterion("ITEM_ID >=", value, "itemId");
            return this;
        }

        public Criteria andItemIdLessThan(Object value) {
            addCriterion("ITEM_ID <", value, "itemId");
            return this;
        }

        public Criteria andItemIdLessThanOrEqualTo(Object value) {
            addCriterion("ITEM_ID <=", value, "itemId");
            return this;
        }

        public Criteria andItemIdIn(List values) {
            addCriterion("ITEM_ID in", values, "itemId");
            return this;
        }

        public Criteria andItemIdNotIn(List values) {
            addCriterion("ITEM_ID not in", values, "itemId");
            return this;
        }

        public Criteria andItemIdBetween(Object value1, Object value2) {
            addCriterion("ITEM_ID between", value1, value2, "itemId");
            return this;
        }

        public Criteria andItemIdNotBetween(Object value1, Object value2) {
            addCriterion("ITEM_ID not between", value1, value2, "itemId");
            return this;
        }

        public Criteria andItemNameIsNull() {
            addCriterion("ITEM_NAME is null");
            return this;
        }

        public Criteria andItemNameIsNotNull() {
            addCriterion("ITEM_NAME is not null");
            return this;
        }

        public Criteria andItemNameEqualTo(Object value) {
            addCriterion("ITEM_NAME =", value, "itemName");
            return this;
        }

        public Criteria andItemNameNotEqualTo(Object value) {
            addCriterion("ITEM_NAME <>", value, "itemName");
            return this;
        }

        public Criteria andItemNameGreaterThan(Object value) {
            addCriterion("ITEM_NAME >", value, "itemName");
            return this;
        }

        public Criteria andItemNameGreaterThanOrEqualTo(Object value) {
            addCriterion("ITEM_NAME >=", value, "itemName");
            return this;
        }

        public Criteria andItemNameLessThan(Object value) {
            addCriterion("ITEM_NAME <", value, "itemName");
            return this;
        }

        public Criteria andItemNameLessThanOrEqualTo(Object value) {
            addCriterion("ITEM_NAME <=", value, "itemName");
            return this;
        }

        public Criteria andItemNameIn(List values) {
            addCriterion("ITEM_NAME in", values, "itemName");
            return this;
        }

        public Criteria andItemNameNotIn(List values) {
            addCriterion("ITEM_NAME not in", values, "itemName");
            return this;
        }

        public Criteria andItemNameBetween(Object value1, Object value2) {
            addCriterion("ITEM_NAME between", value1, value2, "itemName");
            return this;
        }

        public Criteria andItemNameNotBetween(Object value1, Object value2) {
            addCriterion("ITEM_NAME not between", value1, value2, "itemName");
            return this;
        }

        public Criteria andLastModifiedTimeIsNull() {
            addCriterion("LAST_MODIFIED_TIME is null");
            return this;
        }

        public Criteria andLastModifiedTimeIsNotNull() {
            addCriterion("LAST_MODIFIED_TIME is not null");
            return this;
        }

        public Criteria andLastModifiedTimeEqualTo(Object value) {
            addCriterion("LAST_MODIFIED_TIME =", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotEqualTo(Object value) {
            addCriterion("LAST_MODIFIED_TIME <>", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThan(Object value) {
            addCriterion("LAST_MODIFIED_TIME >", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThanOrEqualTo(Object value) {
            addCriterion("LAST_MODIFIED_TIME >=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThan(Object value) {
            addCriterion("LAST_MODIFIED_TIME <", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThanOrEqualTo(Object value) {
            addCriterion("LAST_MODIFIED_TIME <=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeIn(List values) {
            addCriterion("LAST_MODIFIED_TIME in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotIn(List values) {
            addCriterion("LAST_MODIFIED_TIME not in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeBetween(Object value1, Object value2) {
            addCriterion("LAST_MODIFIED_TIME between", value1, value2, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotBetween(Object value1, Object value2) {
            addCriterion("LAST_MODIFIED_TIME not between", value1, value2, "lastModifiedTime");
            return this;
        }
    }
}