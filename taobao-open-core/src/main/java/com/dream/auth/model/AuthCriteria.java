package com.dream.auth.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AuthCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public AuthCriteria() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    protected AuthCriteria(AuthCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table TOP_AUTH
     *
     *  Mon Sep 29 17:29:04 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andIsLockIsNull() {
            addCriterion("IS_LOCK is null");
            return this;
        }

        public Criteria andIsLockIsNotNull() {
            addCriterion("IS_LOCK is not null");
            return this;
        }

        public Criteria andIsLockEqualTo(String value) {
            addCriterion("IS_LOCK =", value, "isLock");
            return this;
        }

        public Criteria andIsLockNotEqualTo(String value) {
            addCriterion("IS_LOCK <>", value, "isLock");
            return this;
        }

        public Criteria andIsLockGreaterThan(String value) {
            addCriterion("IS_LOCK >", value, "isLock");
            return this;
        }

        public Criteria andIsLockGreaterThanOrEqualTo(String value) {
            addCriterion("IS_LOCK >=", value, "isLock");
            return this;
        }

        public Criteria andIsLockLessThan(String value) {
            addCriterion("IS_LOCK <", value, "isLock");
            return this;
        }

        public Criteria andIsLockLessThanOrEqualTo(String value) {
            addCriterion("IS_LOCK <=", value, "isLock");
            return this;
        }

        public Criteria andIsLockLike(String value) {
            addCriterion("IS_LOCK like", value, "isLock");
            return this;
        }

        public Criteria andIsLockNotLike(String value) {
            addCriterion("IS_LOCK not like", value, "isLock");
            return this;
        }

        public Criteria andIsLockIn(List values) {
            addCriterion("IS_LOCK in", values, "isLock");
            return this;
        }

        public Criteria andIsLockNotIn(List values) {
            addCriterion("IS_LOCK not in", values, "isLock");
            return this;
        }

        public Criteria andIsLockBetween(String value1, String value2) {
            addCriterion("IS_LOCK between", value1, value2, "isLock");
            return this;
        }

        public Criteria andIsLockNotBetween(String value1, String value2) {
            addCriterion("IS_LOCK not between", value1, value2, "isLock");
            return this;
        }

        public Criteria andIsEnableIsNull() {
            addCriterion("IS_ENABLE is null");
            return this;
        }

        public Criteria andIsEnableIsNotNull() {
            addCriterion("IS_ENABLE is not null");
            return this;
        }

        public Criteria andIsEnableEqualTo(String value) {
            addCriterion("IS_ENABLE =", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableNotEqualTo(String value) {
            addCriterion("IS_ENABLE <>", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableGreaterThan(String value) {
            addCriterion("IS_ENABLE >", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableGreaterThanOrEqualTo(String value) {
            addCriterion("IS_ENABLE >=", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableLessThan(String value) {
            addCriterion("IS_ENABLE <", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableLessThanOrEqualTo(String value) {
            addCriterion("IS_ENABLE <=", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableLike(String value) {
            addCriterion("IS_ENABLE like", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableNotLike(String value) {
            addCriterion("IS_ENABLE not like", value, "isEnable");
            return this;
        }

        public Criteria andIsEnableIn(List values) {
            addCriterion("IS_ENABLE in", values, "isEnable");
            return this;
        }

        public Criteria andIsEnableNotIn(List values) {
            addCriterion("IS_ENABLE not in", values, "isEnable");
            return this;
        }

        public Criteria andIsEnableBetween(String value1, String value2) {
            addCriterion("IS_ENABLE between", value1, value2, "isEnable");
            return this;
        }

        public Criteria andIsEnableNotBetween(String value1, String value2) {
            addCriterion("IS_ENABLE not between", value1, value2, "isEnable");
            return this;
        }

        public Criteria andTaobaoUserNickIsNull() {
            addCriterion("TAOBAO_USER_NICK is null");
            return this;
        }

        public Criteria andTaobaoUserNickIsNotNull() {
            addCriterion("TAOBAO_USER_NICK is not null");
            return this;
        }

        public Criteria andTaobaoUserNickEqualTo(String value) {
            addCriterion("TAOBAO_USER_NICK =", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickNotEqualTo(String value) {
            addCriterion("TAOBAO_USER_NICK <>", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickGreaterThan(String value) {
            addCriterion("TAOBAO_USER_NICK >", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickGreaterThanOrEqualTo(String value) {
            addCriterion("TAOBAO_USER_NICK >=", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickLessThan(String value) {
            addCriterion("TAOBAO_USER_NICK <", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickLessThanOrEqualTo(String value) {
            addCriterion("TAOBAO_USER_NICK <=", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickLike(String value) {
            addCriterion("TAOBAO_USER_NICK like", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickNotLike(String value) {
            addCriterion("TAOBAO_USER_NICK not like", value, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickIn(List values) {
            addCriterion("TAOBAO_USER_NICK in", values, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickNotIn(List values) {
            addCriterion("TAOBAO_USER_NICK not in", values, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickBetween(String value1, String value2) {
            addCriterion("TAOBAO_USER_NICK between", value1, value2, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserNickNotBetween(String value1, String value2) {
            addCriterion("TAOBAO_USER_NICK not between", value1, value2, "taobaoUserNick");
            return this;
        }

        public Criteria andTaobaoUserIdIsNull() {
            addCriterion("TAOBAO_USER_ID is null");
            return this;
        }

        public Criteria andTaobaoUserIdIsNotNull() {
            addCriterion("TAOBAO_USER_ID is not null");
            return this;
        }

        public Criteria andTaobaoUserIdEqualTo(String value) {
            addCriterion("TAOBAO_USER_ID =", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdNotEqualTo(String value) {
            addCriterion("TAOBAO_USER_ID <>", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdGreaterThan(String value) {
            addCriterion("TAOBAO_USER_ID >", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("TAOBAO_USER_ID >=", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdLessThan(String value) {
            addCriterion("TAOBAO_USER_ID <", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdLessThanOrEqualTo(String value) {
            addCriterion("TAOBAO_USER_ID <=", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdLike(String value) {
            addCriterion("TAOBAO_USER_ID like", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdNotLike(String value) {
            addCriterion("TAOBAO_USER_ID not like", value, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdIn(List values) {
            addCriterion("TAOBAO_USER_ID in", values, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdNotIn(List values) {
            addCriterion("TAOBAO_USER_ID not in", values, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdBetween(String value1, String value2) {
            addCriterion("TAOBAO_USER_ID between", value1, value2, "taobaoUserId");
            return this;
        }

        public Criteria andTaobaoUserIdNotBetween(String value1, String value2) {
            addCriterion("TAOBAO_USER_ID not between", value1, value2, "taobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdIsNull() {
            addCriterion("SUB_TAOBAO_USER_ID is null");
            return this;
        }

        public Criteria andSubTaobaoUserIdIsNotNull() {
            addCriterion("SUB_TAOBAO_USER_ID is not null");
            return this;
        }

        public Criteria andSubTaobaoUserIdEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_ID =", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdNotEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_ID <>", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdGreaterThan(String value) {
            addCriterion("SUB_TAOBAO_USER_ID >", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_ID >=", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdLessThan(String value) {
            addCriterion("SUB_TAOBAO_USER_ID <", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdLessThanOrEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_ID <=", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdLike(String value) {
            addCriterion("SUB_TAOBAO_USER_ID like", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdNotLike(String value) {
            addCriterion("SUB_TAOBAO_USER_ID not like", value, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdIn(List values) {
            addCriterion("SUB_TAOBAO_USER_ID in", values, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdNotIn(List values) {
            addCriterion("SUB_TAOBAO_USER_ID not in", values, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdBetween(String value1, String value2) {
            addCriterion("SUB_TAOBAO_USER_ID between", value1, value2, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserIdNotBetween(String value1, String value2) {
            addCriterion("SUB_TAOBAO_USER_ID not between", value1, value2, "subTaobaoUserId");
            return this;
        }

        public Criteria andSubTaobaoUserNickIsNull() {
            addCriterion("SUB_TAOBAO_USER_NICK is null");
            return this;
        }

        public Criteria andSubTaobaoUserNickIsNotNull() {
            addCriterion("SUB_TAOBAO_USER_NICK is not null");
            return this;
        }

        public Criteria andSubTaobaoUserNickEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK =", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickNotEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK <>", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickGreaterThan(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK >", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickGreaterThanOrEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK >=", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickLessThan(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK <", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickLessThanOrEqualTo(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK <=", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickLike(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK like", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickNotLike(String value) {
            addCriterion("SUB_TAOBAO_USER_NICK not like", value, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickIn(List values) {
            addCriterion("SUB_TAOBAO_USER_NICK in", values, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickNotIn(List values) {
            addCriterion("SUB_TAOBAO_USER_NICK not in", values, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickBetween(String value1, String value2) {
            addCriterion("SUB_TAOBAO_USER_NICK between", value1, value2, "subTaobaoUserNick");
            return this;
        }

        public Criteria andSubTaobaoUserNickNotBetween(String value1, String value2) {
            addCriterion("SUB_TAOBAO_USER_NICK not between", value1, value2, "subTaobaoUserNick");
            return this;
        }

        public Criteria andRefreshedTimeIsNull() {
            addCriterion("REFRESHED_TIME is null");
            return this;
        }

        public Criteria andRefreshedTimeIsNotNull() {
            addCriterion("REFRESHED_TIME is not null");
            return this;
        }

        public Criteria andRefreshedTimeEqualTo(Date value) {
            addCriterion("REFRESHED_TIME =", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeNotEqualTo(Date value) {
            addCriterion("REFRESHED_TIME <>", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeGreaterThan(Date value) {
            addCriterion("REFRESHED_TIME >", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("REFRESHED_TIME >=", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeLessThan(Date value) {
            addCriterion("REFRESHED_TIME <", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeLessThanOrEqualTo(Date value) {
            addCriterion("REFRESHED_TIME <=", value, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeIn(List values) {
            addCriterion("REFRESHED_TIME in", values, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeNotIn(List values) {
            addCriterion("REFRESHED_TIME not in", values, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeBetween(Date value1, Date value2) {
            addCriterion("REFRESHED_TIME between", value1, value2, "refreshedTime");
            return this;
        }

        public Criteria andRefreshedTimeNotBetween(Date value1, Date value2) {
            addCriterion("REFRESHED_TIME not between", value1, value2, "refreshedTime");
            return this;
        }
    }
}