DROP TABLE QRTZ_BLOB_TRIGGERS;
CREATE TABLE QRTZ_BLOB_TRIGGERS (TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, BLOB_DATA BLOB);
DROP TABLE QRTZ_CALENDARS;
CREATE TABLE QRTZ_CALENDARS (CALENDAR_NAME VARCHAR(200) NOT NULL, CALENDAR BLOB NOT NULL, PRIMARY KEY (CALENDAR_NAME));
CREATE UNIQUE INDEX PRIMARY_KEY_B ON QRTZ_CALENDARS (CALENDAR_NAME ASC);
DROP TABLE QRTZ_CRON_TRIGGERS;
CREATE TABLE QRTZ_CRON_TRIGGERS (TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, CRON_EXPRESSION VARCHAR(120) NOT NULL, TIME_ZONE_ID VARCHAR(80), PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP));
CREATE UNIQUE INDEX PRIMARY_KEY_4 ON QRTZ_CRON_TRIGGERS (TRIGGER_NAME ASC, TRIGGER_GROUP ASC);
DROP TABLE QRTZ_FIRED_TRIGGERS;
CREATE TABLE QRTZ_FIRED_TRIGGERS (ENTRY_ID VARCHAR(95) NOT NULL, TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, IS_VOLATILE BOOLEAN NOT NULL, INSTANCE_NAME VARCHAR(200) NOT NULL, FIRED_TIME BIGINT NOT NULL, PRIORITY INTEGER NOT NULL, STATE VARCHAR(16) NOT NULL, JOB_NAME VARCHAR(200), JOB_GROUP VARCHAR(200), IS_STATEFUL BOOLEAN, REQUESTS_RECOVERY BOOLEAN, PRIMARY KEY (ENTRY_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_F6 ON QRTZ_FIRED_TRIGGERS (ENTRY_ID ASC);
DROP TABLE QRTZ_JOB_DETAILS;
CREATE TABLE QRTZ_JOB_DETAILS (JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, DESCRIPTION VARCHAR(250), JOB_CLASS_NAME VARCHAR(250) NOT NULL, IS_DURABLE BOOLEAN NOT NULL, IS_VOLATILE BOOLEAN NOT NULL, IS_STATEFUL BOOLEAN NOT NULL, REQUESTS_RECOVERY BOOLEAN NOT NULL, JOB_DATA BLOB, PRIMARY KEY (JOB_NAME, JOB_GROUP));
CREATE UNIQUE INDEX PRIMARY_KEY_B3 ON QRTZ_JOB_DETAILS (JOB_NAME ASC, JOB_GROUP ASC);
DROP TABLE QRTZ_JOB_LISTENERS;
CREATE TABLE QRTZ_JOB_LISTENERS (JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, JOB_LISTENER VARCHAR(200) NOT NULL, PRIMARY KEY (JOB_NAME, JOB_GROUP, JOB_LISTENER));
CREATE UNIQUE INDEX PRIMARY_KEY_2 ON QRTZ_JOB_LISTENERS (JOB_NAME ASC, JOB_GROUP ASC, JOB_LISTENER ASC);
DROP TABLE QRTZ_LOCKS;
CREATE TABLE QRTZ_LOCKS (LOCK_NAME VARCHAR(40) NOT NULL, PRIMARY KEY (LOCK_NAME));
CREATE UNIQUE INDEX PRIMARY_KEY_1 ON QRTZ_LOCKS (LOCK_NAME ASC);
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (TRIGGER_GROUP VARCHAR(200) NOT NULL, PRIMARY KEY (TRIGGER_GROUP));
CREATE UNIQUE INDEX PRIMARY_KEY_7C ON QRTZ_PAUSED_TRIGGER_GRPS (TRIGGER_GROUP ASC);
DROP TABLE QRTZ_SCHEDULER_STATE;
CREATE TABLE QRTZ_SCHEDULER_STATE (INSTANCE_NAME VARCHAR(200) NOT NULL, LAST_CHECKIN_TIME BIGINT NOT NULL, CHECKIN_INTERVAL BIGINT NOT NULL, PRIMARY KEY (INSTANCE_NAME));
CREATE UNIQUE INDEX PRIMARY_KEY_68 ON QRTZ_SCHEDULER_STATE (INSTANCE_NAME ASC);
DROP TABLE QRTZ_SIMPLE_TRIGGERS;
CREATE TABLE QRTZ_SIMPLE_TRIGGERS (TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, REPEAT_COUNT BIGINT NOT NULL, REPEAT_INTERVAL BIGINT NOT NULL, TIMES_TRIGGERED BIGINT NOT NULL, PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP));
CREATE UNIQUE INDEX PRIMARY_KEY_42 ON QRTZ_SIMPLE_TRIGGERS (TRIGGER_NAME ASC, TRIGGER_GROUP ASC);
DROP TABLE QRTZ_TRIGGERS;
CREATE TABLE QRTZ_TRIGGERS (TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, JOB_NAME VARCHAR(200) NOT NULL, JOB_GROUP VARCHAR(200) NOT NULL, IS_VOLATILE BOOLEAN NOT NULL, DESCRIPTION VARCHAR(250), NEXT_FIRE_TIME BIGINT, PREV_FIRE_TIME BIGINT, PRIORITY INTEGER, TRIGGER_STATE VARCHAR(16) NOT NULL, TRIGGER_TYPE VARCHAR(8) NOT NULL, START_TIME BIGINT NOT NULL, END_TIME BIGINT, CALENDAR_NAME VARCHAR(200), MISFIRE_INSTR SMALLINT, JOB_DATA BLOB, PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP));
CREATE UNIQUE INDEX PRIMARY_KEY_3 ON QRTZ_TRIGGERS (TRIGGER_NAME ASC, TRIGGER_GROUP ASC);
CREATE INDEX FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS_INDEX_3 ON QRTZ_TRIGGERS (JOB_NAME ASC, JOB_GROUP ASC);
DROP TABLE QRTZ_TRIGGER_LISTENERS;
CREATE TABLE QRTZ_TRIGGER_LISTENERS (TRIGGER_NAME VARCHAR(200) NOT NULL, TRIGGER_GROUP VARCHAR(200) NOT NULL, TRIGGER_LISTENER VARCHAR(200) NOT NULL, PRIMARY KEY (TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_LISTENER));
CREATE UNIQUE INDEX PRIMARY_KEY_C6 ON QRTZ_TRIGGER_LISTENERS (TRIGGER_NAME ASC, TRIGGER_GROUP ASC, TRIGGER_LISTENER ASC);
DROP TABLE TOP_AUTH;
CREATE TABLE TOP_AUTH (USER_ID BIGINT NOT NULL, IS_LOCK CHAR(1) NOT NULL, IS_ENABLE CHAR(1) NOT NULL, TAOBAO_USER_NICK VARCHAR(20), TAOBAO_USER_ID VARCHAR(30), SUB_TAOBAO_USER_ID VARCHAR(20), SUB_TAOBAO_USER_NICK VARCHAR(30), REFRESHED_TIME TIMESTAMP, SHOP_ID BIGINT, CREATE_TIME TIMESTAMP, ACCESS_TOKEN VARCHAR(100), TOKEN_TYPE VARCHAR(20), EXPIRES_IN INTEGER, REFRESH_TOKEN VARCHAR(100), RE_EXPIRES_IN INTEGER, R1_EXPIRES_IN INTEGER, R2_EXPIRES_IN INTEGER, W1_EXPIRES_IN INTEGER, W2_EXPIRES_IN INTEGER, PRIMARY KEY (USER_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_D ON TOP_AUTH (USER_ID ASC);
DROP TABLE TOP_AUTH_LOG;
CREATE TABLE TOP_AUTH_LOG (LOG_ID BIGINT NOT NULL, SESSION_ID VARCHAR(60), CLIENT_IP VARCHAR(60), CLIENT_OS VARCHAR(60), CLIENT_BROWSER VARCHAR(60), USER_ID BIGINT NOT NULL, AUTH_TIME TIMESTAMP, PRIMARY KEY (LOG_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_A ON TOP_AUTH_LOG (LOG_ID ASC);
DROP TABLE TOP_ITEM;
CREATE TABLE TOP_ITEM (NUM_IID BIGINT NOT NULL, CID INTEGER, SELLER_CIDS VARCHAR(100), PROPS VARCHAR(2000), PIC_URL VARCHAR(1000), NUM VARCHAR(100), LIST_TIME TIMESTAMP, DELIST_TIME TIMESTAMP, PRICE DECIMAL(10,2), HAS_DISCOUNT CHAR(10), HAS_INVOICE CHAR(10), HAS_WARRANTY CHAR(10), HAS_SHOWCASE CHAR(10), MODIFIED TIMESTAMP, APPROVE_STATUS CHAR(10), POSTAGE_ID INTEGER, IS_VIRTUAL CHAR(10), IS_TAOBAO CHAR(10), IS_EX CHAR(10), TITLE VARCHAR(500), NICK VARCHAR(20), TYPE VARCHAR(10), VALID_THRU VARCHAR(10), OUTER_ID VARCHAR(100), ONSALE_STATUS CHAR(1), SOLD_QUANTITY INTEGER, ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP, REFRESH_TIME TIMESTAMP, PRIMARY KEY (ID));
CREATE UNIQUE INDEX PRIMARY_KEY_69 ON TOP_ITEM (ID ASC);
DROP TABLE TOP_MENU;
CREATE TABLE TOP_MENU (MENU_NAME_CN VARCHAR(20), MENU_ID VARCHAR(4) NOT NULL, LFT_VALUE VARCHAR(4), RGT_VALUE VARCHAR(4), ORDER_NUM INTEGER, MENU_NAME_EN VARCHAR(20), PRIMARY KEY (MENU_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_59 ON TOP_MENU (MENU_ID ASC);
DROP TABLE TOP_RECOMMEND_ITEM;
CREATE TABLE TOP_RECOMMEND_ITEM (ID CHAR(14) NOT NULL, SHOP_ID CHAR(10) NOT NULL, ITEM_ID CHAR(10) NOT NULL, ITEM_NAME VARCHAR(30) NOT NULL, RECOMMEND_TYPE CHAR(1) NOT NULL, RECOMMEND_TIME TIMESTAMP, REFRESH_TIME TIMESTAMP, PRIMARY KEY (ID));
CREATE UNIQUE INDEX PRIMARY_KEY_B0 ON TOP_RECOMMEND_ITEM (ID ASC);
DROP TABLE TOP_RECOMMEND_LOG;
CREATE TABLE TOP_RECOMMEND_LOG (ID BIGINT NOT NULL, SHOP_ID BIGINT, ITEM_ID BIGINT, ITEM_NAME VARCHAR(200), LAST_MODIFIED_TIME TIMESTAMP, LAST_MODIFIED_BY BIGINT, RECOMMEND_TYPE CHAR(2147483647), PRIMARY KEY (ID));
CREATE UNIQUE INDEX PRIMARY_KEY_482 ON TOP_RECOMMEND_LOG (ID ASC);
DROP TABLE TOP_RECOMMEND_MODE_SETTING;
CREATE TABLE TOP_RECOMMEND_MODE_SETTING (SHOP_ID BIGINT NOT NULL, SALED_NUM INTEGER, STORAGE_NUM CHAR(3), OFFSHELVES_TIME INTEGER, LAST_MODIFIED_BY BIGINT, LAST_MODIFIED_TIME TIMESTAMP, IS_SALED_FIRST CHAR(1), IS_OFFSHELVES_FILTERED CHAR(1), IS_STORAGE_FILTERED CHAR(1), IS_ONSHELVES_FILTERED CHAR(1), PRIMARY KEY (SHOP_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_E6 ON TOP_RECOMMEND_MODE_SETTING (SHOP_ID ASC);
DROP TABLE TOP_RECOMMEND_SCOPE_CATEGORY;
CREATE TABLE TOP_RECOMMEND_SCOPE_CATEGORY (ID CHAR(14) NOT NULL, SHOP_ID CHAR(10) NOT NULL, CAT_ID CHAR(10) NOT NULL, CAT_NAME VARCHAR(30) NOT NULL, LAST_MODIFIED_TIME TIMESTAMP NOT NULL, LAST_MODIFIED_BY BIGINT, PRIMARY KEY (ID));
CREATE UNIQUE INDEX PRIMARY_KEY_406 ON TOP_RECOMMEND_SCOPE_CATEGORY (ID ASC);
DROP TABLE TOP_RECOMMEND_SCOPE_KEYWORD;
CREATE TABLE TOP_RECOMMEND_SCOPE_KEYWORD (SHOP_ID BIGINT NOT NULL, KEYWORD VARCHAR(500), LAST_MODIFIED_TIME TIMESTAMP, LAST_MODIFIED_BY BIGINT, PRIMARY KEY (SHOP_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_43 ON TOP_RECOMMEND_SCOPE_KEYWORD (SHOP_ID ASC);
DROP TABLE TOP_RECOMMEND_SCOPE_SETTING;
CREATE TABLE TOP_RECOMMEND_SCOPE_SETTING (SHOP_ID BIGINT NOT NULL, SCOPE_TYPE CHAR(1) NOT NULL, IS_ENABLED CHAR(1) NOT NULL, LAST_MODIFIED_BY BIGINT NOT NULL, LAST_MODIFIED_TIME TIMESTAMP NOT NULL, PRIMARY KEY (SHOP_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_1D ON TOP_RECOMMEND_SCOPE_SETTING (SHOP_ID ASC);
DROP TABLE TOP_RECOMMEND_SPECIFIED;
CREATE TABLE TOP_RECOMMEND_SPECIFIED (ID CHAR(14) NOT NULL, SHOP_ID CHAR(10) NOT NULL, TYPE CHAR(1) NOT NULL, ITEM_ID CHAR(10) NOT NULL, ITEM_NAME VARCHAR(30) NOT NULL, LAST_MODIFIED_BY BIGINT NOT NULL, LAST_MODIFIED_TIME TIMESTAMP NOT NULL, PRIMARY KEY (ID));
CREATE UNIQUE INDEX PRIMARY_KEY_3A ON TOP_RECOMMEND_SPECIFIED (ID ASC);
DROP TABLE TOP_RECOMMEND_STATUS;
CREATE TABLE TOP_RECOMMEND_STATUS (SHOP_ID BIGINT NOT NULL, STATUS CHAR(1), LAST_MODIFIED_TIME TIMESTAMP, LAST_MODIFIED_BY BIGINT, PRIMARY KEY (SHOP_ID));
CREATE UNIQUE INDEX PRIMARY_KEY_E ON TOP_RECOMMEND_STATUS (SHOP_ID ASC);
DROP TABLE TOP_SHOP;
CREATE TABLE TOP_SHOP (SID BIGINT NOT NULL, CID BIGINT NOT NULL, NICK VARCHAR(20) NOT NULL, TITLE VARCHAR(20), DESC VARCHAR(60), BULLETIN VARCHAR(100), PIC_PATH VARCHAR(100), CREATED TIMESTAMP, MODIFIED TIMESTAMP, PRIMARY KEY (SID), CONSTRAINT TOP_SHOP_IX1 UNIQUE (NICK));
CREATE UNIQUE INDEX PRIMARY_KEY_F ON TOP_SHOP (SID ASC);
CREATE UNIQUE INDEX TOP_SHOP_IX1_INDEX_F ON TOP_SHOP (NICK ASC);
DROP TABLE TOP_SHOP_CATEGORY;
CREATE TABLE TOP_SHOP_CATEGORY (CID BIGINT NOT NULL, PARENT_CID BIGINT, NAME VARCHAR(60), PIC_URL VARCHAR(500), SORT_ORDER INTEGER, TYPE VARCHAR(20), SHOP_ID BIGINT, CREATE_TIME TIMESTAMP, REFRESH_TIME TIMESTAMP, PRIMARY KEY (CID));
CREATE UNIQUE INDEX PRIMARY_KEY_F8 ON TOP_SHOP_CATEGORY (CID ASC);
DROP TABLE TOP_SYS_PARAM;
CREATE TABLE TOP_SYS_PARAM (ID CHAR(10) NOT NULL, KEY VARCHAR(30) NOT NULL, VALUE VARCHAR(60) NOT NULL, STATUS CHAR(1) NOT NULL, DESC VARCHAR(100), PRIMARY KEY (ID), CONSTRAINT TOP_SYS_PARAM_IX1 UNIQUE (KEY));
CREATE UNIQUE INDEX PRIMARY_KEY_C ON TOP_SYS_PARAM (ID ASC);
CREATE UNIQUE INDEX TOP_SYS_PARAM_IX1_INDEX_C ON TOP_SYS_PARAM (KEY ASC);
ALTER TABLE QRTZ_CRON_TRIGGERS ADD CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME, TRIGGER_GROUP) ON DELETE CASCADE;
ALTER TABLE QRTZ_JOB_LISTENERS ADD CONSTRAINT FK_QRTZ_JOB_LISTENERS_QRTZ_JOB_DETAILS FOREIGN KEY (JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (JOB_NAME, JOB_GROUP) ON DELETE CASCADE;
ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME, TRIGGER_GROUP) ON DELETE CASCADE;
ALTER TABLE QRTZ_TRIGGERS ADD CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS FOREIGN KEY (JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (JOB_NAME, JOB_GROUP) ON DELETE RESTRICT;
ALTER TABLE QRTZ_TRIGGER_LISTENERS ADD CONSTRAINT FK_QRTZ_TRIGGER_LISTENERS_QRTZ_TRIGGERS FOREIGN KEY (TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (TRIGGER_NAME, TRIGGER_GROUP) ON DELETE CASCADE;
